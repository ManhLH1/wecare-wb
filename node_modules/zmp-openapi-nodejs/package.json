{
  "_from": "zmp-openapi-nodejs@2.1.0",
  "_id": "zmp-openapi-nodejs@2.1.0",
  "_inBundle": false,
  "_integrity": "sha512-JELuMTfjLwLWstkwI13PwFhhSxcSvUzVnU7UjS5J3bPJHSyd2DC/F4X7Q+ao7zHqDNB4yC42kDyKOjSmaqPN+A==",
  "_location": "/zmp-openapi-nodejs",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "zmp-openapi-nodejs@2.1.0",
    "name": "zmp-openapi-nodejs",
    "escapedName": "zmp-openapi-nodejs",
    "rawSpec": "2.1.0",
    "saveSpec": null,
    "fetchSpec": "2.1.0"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/zmp-openapi-nodejs/-/zmp-openapi-nodejs-2.1.0.tgz",
  "_shasum": "7981f1a56e14112935a5a29fccf26a853c399c6b",
  "_spec": "zmp-openapi-nodejs@2.1.0",
  "_where": "D:\\Wecare App\\nodejs-webhook-server-example-master",
  "ava": {
    "failFast": true,
    "timeout": "60s",
    "typescript": {
      "rewritePaths": {
        "src/": "build/main/"
      }
    },
    "files": [
      "!build/module/**"
    ]
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "dependencies": {
    "@bitauth/libauth": "^1.17.1",
    "axios": "^1.2.1",
    "form-data": "^4.0.0",
    "qs": "^6.11.0"
  },
  "deprecated": false,
  "description": "SDK for ZaloMiniApp with Node.js",
  "devDependencies": {
    "@ava/typescript": "^1.1.1",
    "@istanbuljs/nyc-config-typescript": "^1.0.1",
    "@types/node": "^18.11.15",
    "ava": "^5.1.0",
    "codecov": "^3.5.0",
    "cspell": "^4.1.0",
    "cz-conventional-changelog": "^3.3.0",
    "dotenv": "^16.3.1",
    "gh-pages": "^3.1.0",
    "npm-run-all": "^4.1.5",
    "nyc": "^15.1.0",
    "open-cli": "^7.1.0",
    "prettier": "^2.8.1",
    "standard-version": "^9.0.0",
    "ts-node": "^9.0.0",
    "typedoc": "^0.23.22",
    "typescript": "^4.0.2"
  },
  "engines": {
    "node": ">=10"
  },
  "files": [
    "build/main",
    "build/module",
    "!**/tests/*",
    "!**/*.spec.*",
    "!**/*.json",
    "CHANGELOG.md",
    "LICENSE",
    "README.md"
  ],
  "keywords": [],
  "license": "MIT",
  "main": "build/main/index.js",
  "module": "build/module/index.js",
  "name": "zmp-openapi-nodejs",
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "exclude": [
      "**/*.spec.js"
    ]
  },
  "prettier": {
    "singleQuote": true
  },
  "scripts": {
    "build": "run-p build:*",
    "build:main": "tsc -p tsconfig.json",
    "build:module": "tsc -p tsconfig.module.json",
    "check-cli": "run-s test diff-integration-tests check-integration-tests",
    "check-integration-tests": "run-s check-integration-test:*",
    "cov": "run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html",
    "cov:check": "nyc report && nyc check-coverage --lines 100 --functions 100 --branches 100",
    "cov:html": "nyc report --reporter=html",
    "cov:lcov": "nyc report --reporter=lcov",
    "cov:send": "run-s cov:lcov && codecov",
    "diff-integration-tests": "mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'",
    "doc": "run-s doc:html && open-cli build/docs/index.html",
    "doc:html": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs",
    "doc:json": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json",
    "doc:publish": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.ts\" --write",
    "prepare-release": "run-s reset-hard test cov:check doc:html version doc:publish",
    "reset-hard": "git clean -dfx && git reset --hard && npm i",
    "test": "run-s build test:*",
    "test:prettier": "prettier \"src/**/*.ts\" --list-different",
    "test:spelling": "cspell \"{README.md,.github/*.md,src/**/*.ts}\"",
    "test:unit": "nyc ava",
    "version": "standard-version",
    "watch:build": "tsc -p tsconfig.json -w",
    "watch:test": "nyc ava --watch"
  },
  "typings": "build/main/index.d.ts",
  "version": "2.1.0"
}
